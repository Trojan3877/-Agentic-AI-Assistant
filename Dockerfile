###############################################################################
# Agentic AI Assistant – Dockerfile
# ---------------------------------
# • Python 3.10 slim (FastAPI + LangGraph)
# • OpenJDK 17 (runs planner.jar)
# • C++ shared library (libvector.so)
###############################################################################

FROM python:3.10-slim AS base

LABEL maintainer="Corey Leath <coreyleath10@gmail.com>"
WORKDIR /app

# ----------------- 1. OS / build deps ---------------------------------------
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        openjdk-17-jre-headless \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# ----------------- 2. Python requirements -----------------------------------
COPY requirements.txt .
RUN pip install --upgrade pip && pip install -r requirements.txt

# ----------------- 3. Copy application code ---------------------------------
COPY agent/        agent/
COPY app/          app/
COPY infra/helm/agentic-ai-assistant/values.yaml values.yaml

# Copy pre-built Java planner and C++ library
#   • planner.jar generated by Maven (`agent/java/target/…jar-with-dependencies.jar`)
#   • libvector.so compiled from C++ (`agent/cpp/libvector.so`)
COPY agent/java/planner.jar         agent/java/planner.jar
COPY agent/cpp/libvector.so         agent/cpp/libvector.so

ENV PYTHONUNBUFFERED=1 \
    LANG=C.UTF-8 \
    JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

# ----------------- 4. Expose & run ------------------------------------------
EXPOSE 8000
CMD ["uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "8000"]
